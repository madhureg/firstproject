{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adfDemoMadhur"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ErrorOutputRows')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "ErrorRowsFilteration",
								"type": "DataFlowReference"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/ErrorRowsFilteration')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlToBlobToCosmos')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SqlToBlob",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSQLDBTable",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "OutputFolder",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "SqlToBlob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "output",
									"wildcardFileName": "*.txt",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "CosmosDbMongoDbApiSink",
								"writeBatchTimeout": "00:30:00",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "String"
										},
										"sink": {
											"path": "$['id']"
										}
									},
									{
										"source": {
											"name": "name",
											"type": "String"
										},
										"sink": {
											"path": "$['name']"
										}
									},
									{
										"source": {
											"name": "dob",
											"type": "String"
										},
										"sink": {
											"path": "$['dob']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "OutputFolder",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "ds_cosmosdb",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "SqlToBlob",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-27.northcentralus.logic.azure.com:443/workflows/be13ca44fdd543c2ac89396ed058fef4/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=WgmS_hKFxRFAwfuzPXe1WJTQOmVvbTwa4sTommV8CoQ",
							"method": "GET"
						}
					},
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "SqlToBlob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[metadata_sp]",
							"storedProcedureParameters": {
								"copyduration": {
									"value": {
										"value": "@activity('SqlToBlob').output.copyDuration",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"datafactoryname": {
									"value": {
										"value": "@pipeline().DataFactory",
										"type": "Expression"
									},
									"type": "String"
								},
								"datareads": {
									"value": {
										"value": "@activity('SqlToBlob').output.dataRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"datawrites": {
									"value": {
										"value": "@activity('SqlToBlob').output.dataWritten",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"executionendtime": {
									"value": {
										"value": "@activity('SqlToBlob').ExecutionEndTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"executionstarttime": {
									"value": {
										"value": "@activity('SqlToBlob').ExecutionStartTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"pilelineid": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"pilelinename": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"status": {
									"value": {
										"value": "@activity('SqlToBlob').status",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSQL",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSQLDBTable')]",
				"[concat(variables('factoryId'), '/datasets/OutputFolder')]",
				"[concat(variables('factoryId'), '/datasets/ds_cosmosdb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSQLDBTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSQL",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "name",
						"type": "nvarchar"
					},
					{
						"name": "dob",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Employees"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/BadData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSQL",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "varchar"
					},
					{
						"name": "name",
						"type": "varchar"
					},
					{
						"name": "DOB",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "tempTableBadData"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CorrectSqlData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSQL",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "name",
						"type": "varchar"
					},
					{
						"name": "DOB",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "tempTable"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/OutputFolder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "FaltFileStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "output",
						"container": "adfstorage"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_cosmosdb')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CosmosDbMongoDb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CosmosDbMongoDbApiCollection",
				"schema": [],
				"typeProperties": {
					"collection": "admincollection"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/tempTableMetadata')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "FaltFileStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "tempTable.txt",
						"folderPath": "inbox",
						"container": "adfstorage"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ErrorRowsFilteration')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "tempTableMetadata",
								"type": "DatasetReference"
							},
							"name": "tempTable"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "BadData",
								"type": "DatasetReference"
							},
							"name": "BadData"
						},
						{
							"dataset": {
								"referenceName": "CorrectSqlData",
								"type": "DatasetReference"
							},
							"name": "CorrectRows"
						}
					],
					"transformations": [
						{
							"name": "ConditionalSplit1"
						},
						{
							"name": "DerivedColumn2"
						}
					],
					"script": "source(output(\n\t\tid as short,\n\t\tname as string,\n\t\tdob as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> tempTable\ntempTable split(isNull(toDate(dob, 'yyyy-mm-dd')),\n\tdisjoint: false) ~> ConditionalSplit1@(ErrorOutput, RestOfTheRows)\nConditionalSplit1@RestOfTheRows derive(dob = toDate(dob, 'yyyy-mm-dd')) ~> DerivedColumn2\nConditionalSplit1@ErrorOutput sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tid as string,\n\t\tname as string,\n\t\tDOB as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> BadData\nDerivedColumn2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tid as integer,\n\t\tname as string,\n\t\tDOB as date\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tid,\n\t\tname,\n\t\tDOB = dob\n\t)) ~> CorrectRows"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/tempTableMetadata')]",
				"[concat(variables('factoryId'), '/datasets/BadData')]",
				"[concat(variables('factoryId'), '/datasets/CorrectSqlData')]"
			]
		}
	]
}